{"version":3,"sources":["Models/ExpertSystem.ts","images/tree.png","images/nodes.png","images/relations.png","layouts/Info.tsx","Components/AnswerComponent.tsx","Components/QuestionComponent.tsx","Components/NodeComponent.tsx","Models/Question.ts","Components/QuestionnaireComponent.tsx","layouts/System.tsx","Routing.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodes","markLower4","text","answers","mark","privileges","admit","reject","other","push","label","node","console","log","firstNode","InfoComponent","className","style","textAlign","Table","striped","bordered","hover","variant","path","map","x","i","split","t","Carousel","Item","height","src","treeImage","alt","nodesImage","relationsImage","to","AnswerComponent","props","answer","Button","width","onClick","reset","QuestionComponent","question","size","setNode","NodeComponent","undefined","QuestionnaireComponent","useState","currentCard","setCurrentCard","SystemComponent","Routing","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"lab5/js/main.ca6afe67.chunk.js","sourcesContent":["import { Answer, Question } from \"./Question\"\nlet nodes = {\n    markLower4: {\n        text: \"Средний балл меньше 4?\",\n        answers: []\n    } as Question,\n    mark: {\n        text: \"Какой средний балл?\",\n        answers: []\n    } as Question,\n    privileges: {\n        text: \"Есть ли льготы?\",\n        answers: []\n    } as Question,\n    admit: {\n        text: \"Поступил!\",\n    } as Answer,\n    reject: {\n        text: \"Не поступил!\",\n    } as Answer,\n    other: {\n        text: \"Выберите другие специальности!\",\n    } as Answer\n};\n\nnodes.markLower4.answers.push({\n    label: \"Да\",\n    node: nodes.reject\n});\nnodes.markLower4.answers.push({\n    label: \"Нет\",\n    node: nodes.mark\n});\n\nnodes.mark.answers.push({\n    label: \"Меньше 6.5\",\n    node: nodes.reject\n});\n\nnodes.mark.answers.push({\n    label: \"6.5\",\n    node: nodes.privileges\n});\n\nnodes.mark.answers.push({\n    label: \"Больше 6.5\",\n    node: nodes.admit\n});\n\nnodes.privileges.answers.push({\n    label: \"Есть\",\n    node: nodes.admit\n});\n\nnodes.privileges.answers.push({\n    label: \"Нету\",\n    node: nodes.other\n});\n\nconsole.log(nodes);\nlet firstNode = nodes.markLower4;\nexport default firstNode;","export default __webpack_public_path__ + \"lab5/media/tree.d80167db.png\";","export default __webpack_public_path__ + \"lab5/media/nodes.6b03da89.png\";","export default __webpack_public_path__ + \"lab5/media/relations.ff906975.png\";","import React from \"react\";\nimport react from \"react\";\nimport { Carousel, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport treeImage from \"../images/tree.png\";\nimport nodesImage from \"../images/nodes.png\";\nimport relationsImage from \"../images/relations.png\";\n\nconst InfoComponent: React.FC = () => {\n    const tableData = [\n        {\n            path: \"1, 2\",\n            text: \"ЕСЛИ есть балл<4 = да \\n ТО ответ = не поступил\"\n        },\n        {\n            path: \"1, 3, 4\",\n            text: \"ЕСЛИ есть балл<4 = нет \\n И средний балл>6,5 = да \\n ТО ответ = поступил\"\n        },\n        {\n            path: \"1, 2\",\n            text: \"ЕСЛИ есть балл<4 = нет \\n И средний балл=6,5 = да \\n И льготы = да \\n ТО ответ = поступил\"\n        },\n        {\n            path: \"1, 2\",\n            text: \"ЕСЛИ есть балл<4 = да \\n ТО ответ = не поступил\"\n        },\n        {\n            path: \"1, 2\",\n            text: \"ЕСЛИ есть балл<4 = да \\n ТО ответ = не поступил\"\n        }\n    ];\n    return (<div className=\"info-section\">\n        <h1>Лабороторная работа 5</h1>\n        <div>\n            <strong>Цель работы: </strong>\n            <span>построить экспертную системы, состоящую из правил продукции с использованием HTML страниц.</span>\n        </div>\n        <div>\n            <strong>Ход работы: </strong>\n        </div>\n        <h2 style={{textAlign: \"end\"}}>Таблица правил</h2>\n        <Table striped bordered hover variant=\"dark\" className=\"rules-table\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Путь</th>\n                    <th>Правила</th>\n                </tr>\n            </thead>\n            <tbody>\n                {tableData.map((x, i) => <tr>\n                    <td>{i + 1}</td>\n                    <td>{x.path}</td>\n                    <td>{x.text.split(\"\\n\").map(t => <p>{t}</p>)}</td>\n                </tr>)}\n                \n            </tbody>\n        </Table>\n        <Carousel>\n            <Carousel.Item style={{height:\"100%\"}}>\n                <img\n                className=\"d-block h-100\"\n                src={treeImage}\n                alt=\"First slide\"\n                />\n            </Carousel.Item>\n            <Carousel.Item style={{height:\"100%\"}}>\n                <img\n                className=\"d-block h-100\"\n                src={nodesImage}\n                alt=\"Second slide\"\n                />\n            </Carousel.Item>\n            <Carousel.Item style={{height:\"100%\"}}>\n                <img\n                className=\"d-block h-100\"\n                src={relationsImage}\n                alt=\"Third slide\"\n                />\n            </Carousel.Item>\n        </Carousel>\n        <Link to=\"/system\">Перейти к системе</Link>\n    </div>)\n}\n\nexport default InfoComponent;","import { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Answer } from \"../Models/Question\";\n\nconst AnswerComponent: React.FC<{answer: Answer, reset: Function}> = (props) => {\n    return (<div>\n        <h3>{props.answer.text}</h3>\n        <Button variant=\"outline-info\" style={{width: \"10rem\"}} onClick={() => props.reset()}>Начать заново</Button>\n        <div>\n            <Link to=\"/info\">\n                <Button variant=\"outline-success\" style={{width: \"10rem\"}}>\n                    На главную\n                </Button>\n            </Link>\n        </div>\n    </div>)\n}\n\nexport default AnswerComponent;","import { Button } from \"react-bootstrap\";\nimport {Question} from \"../Models/Question\";\n\nconst QuestionComponent: React.FC<{question: Question, setNode: Function}> = (props) => {\n    console.log(\"props\");\n    console.log(props);\n    return (<div>\n        <h3>{props.question.text}</h3>\n        {\n            props.question.answers.map(x => <Button className=\"answer-btn\" size=\"lg\" variant=\"outline-primary\" onClick={() => props.setNode(x.node)}>{x.label}</Button>)\n        }\n    </div>)\n}\n\nexport default QuestionComponent;","import React from \"react\";\nimport { Answer, isQuestion, Node, Question } from \"../Models/Question\";\nimport AnswerComponent from \"./AnswerComponent\";\nimport QuestionComponent from \"./QuestionComponent\";\n\nconst NodeComponent: React.FC<{node: Node, setNode: Function, reset: Function}> = (props) => {\n    if (isQuestion(props.node)){\n        let question = props.node as Question;\n        return (\n            <div>\n                <QuestionComponent question={question} setNode={props.setNode} />\n            </div>\n        )\n    }\n    let answer = props.node as Answer;\n    return (<AnswerComponent answer={answer} reset={props.reset} />)\n}\n\nexport default NodeComponent;","export interface Question {\n    text: string;\n    answers: {\n        label: string,\n        node: Node\n    }[]\n}\n\nexport function isQuestion(arg: any): arg is Question {\n    return arg.answers !== undefined;\n}\n\nexport interface Answer {\n    text: string;\n}\n\nexport type Node = Question | Answer;","import react, { useState } from \"react\";\nimport NodeComponent from \"./NodeComponent\";\nimport firstNode from \"../Models/ExpertSystem\";\n\nconst QuestionnaireComponent: React.FC = () => {\n    const [currentCard, setCurrentCard] = useState(firstNode);\n\n    return (<div>\n        <NodeComponent setNode={setCurrentCard} node={currentCard} reset={() => setCurrentCard(firstNode)}/>\n    </div>)\n}\n\nexport default QuestionnaireComponent;","import QuestionnaireComponent from \"../Components/QuestionnaireComponent\"\n\nconst SystemComponent: React.FC = () => {\n    return (<div>\n        <QuestionnaireComponent />\n    </div>)\n}\n\nexport default SystemComponent;","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport InfoComponent from \"./layouts/Info\";\nimport SystemComponent from \"./layouts/System\";\n\nconst Routing: React.FC = () => {\n    return (<Switch>\n        <Route exact path=\"/info\" component={InfoComponent} />\n        <Route exact path=\"/system\" component={SystemComponent} />\n        <Redirect to=\"/info\" />\n    </Switch>)\n};\n\nexport default Routing;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport nodes from \"./Models/ExpertSystem\";\nimport QuestionnaireComponent from './Components/QuestionnaireComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routing from './Routing';\n\nfunction App() {\n  console.log(nodes);\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routing />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}